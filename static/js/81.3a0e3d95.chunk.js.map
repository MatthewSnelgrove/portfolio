{"version":3,"file":"static/js/81.3a0e3d95.chunk.js","mappings":"yOA0FA,QA9EA,SAAoBA,GAClB,MAAMC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,KACnB,OAAEC,GAAWJ,GACZK,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,SAC5BG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,wBAyBjC,OAvBAK,EAAAA,EAAAA,YAAU,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACdC,MAAMC,EAAAA,EAAUC,WAAY,CAC1BC,OAAQ,QAEPC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQlB,EAAQkB,KACtBE,OAAOC,GAAQA,KAER,QAANd,EAAAe,cAAM,IAAAf,OAAA,EAANA,EAAQgB,YAAa,KACvBlB,EAAQ,aAGA,QAANG,EAAAc,cAAM,IAAAd,OAAA,EAANA,EAAQe,YAAa,IACvBpB,EAAS,SACM,QAANM,EAAAa,cAAM,IAAAb,OAAA,EAANA,EAAQc,aAAc,MAAa,QAANb,EAAAY,cAAM,IAAAZ,OAAA,EAANA,EAAQa,YAAa,IAC3DpB,EAAS,SACM,QAANQ,EAAAW,cAAM,IAAAX,OAAA,EAANA,EAAQY,aAAc,MAAa,QAANX,EAAAU,cAAM,IAAAV,OAAA,EAANA,EAAQW,YAAa,KAC3DpB,EAAS,QAETA,EAAS,OACX,GACC,KAGDqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,QAAM,CAACC,MAAO/B,IACdC,GACC4B,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAAAJ,UACHC,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAE7B,SAAS8B,UAAU,4BAA2BN,UAC1DC,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAAAP,UACRC,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLC,cAAY,EACZC,oBAAkB,EAClBC,aAAa,EACbC,MAAOvC,EAAKgB,WACZX,KAAMA,EACNT,MAAO,CACL4C,QAAS5C,EAAM6C,YACfC,UAAW9C,EAAM+C,WACjBC,YAAahD,EAAMiD,YAAYD,YAC/BE,cAAelD,EAAMiD,YAAYC,cACjCC,iBAAkBnD,EAAMiD,YAAYC,cACpCE,WAAYpD,EAAMiD,YAAYC,eAC9BnB,UAEFC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,eAAcN,SAC1B3B,EAAKgB,WAAWiC,KAAKjC,GACpBA,EAAWkC,MACTtB,EAAAA,EAAAA,KAAA,OAEEuB,IAAKnC,EAAWkC,KAAKC,IACrBC,IAAKpC,EAAWkC,KAAKE,KAFhBpC,EAAWkC,KAAKC,KAIrB,kBAQhBvB,EAAAA,EAAAA,KAACyB,EAAAA,QAAe,MAIxB,C,4ECvEA,QATA,SAAgB1D,GACd,MAAM,MAAEmC,GAAUnC,EAClB,OAAOiC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SAAQN,SAAEG,GAClC,C","sources":["components/Experience.jsx","components/Header.jsx"],"sourcesContent":["/* eslint-disable react/destructuring-assignment */\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Chrono } from \"react-chrono\";\nimport { Container } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport Fade from \"react-reveal\";\nimport { ThemeContext } from \"styled-components\";\nimport endpoints from \"../constants/endpoints\";\nimport Header from \"./Header\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport \"../css/experience.css\";\n\nfunction Experience(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [width, setWidth] = useState(\"50vw\");\n  const [mode, setMode] = useState(\"VERTICAL_ALTERNATING\");\n\n  useEffect(() => {\n    fetch(endpoints.experience, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n\n    if (window?.innerWidth < 576) {\n      setMode(\"VERTICAL\");\n    }\n\n    if (window?.innerWidth < 576) {\n      setWidth(\"90vw\");\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\n      setWidth(\"85vw\");\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\n      setWidth(\"80vw\");\n    } else {\n      setWidth(\"75vw\");\n    }\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div style={{ width }} className=\"section-content-container\">\n            <Container>\n              <Chrono\n                hideControls\n                allowDynamicUpdate\n                useReadMore={false}\n                items={data.experience}\n                mode={mode}\n                theme={{\n                  primary: theme.accentColor,\n                  secondary: theme.background,\n                  cardBgColor: theme.chronoTheme.cardBgColor,\n                  cardForeColor: theme.chronoTheme.cardForeColor,\n                  titleColorActive: theme.chronoTheme.cardForeColor,\n                  titleColor: theme.chronoTheme.cardForeColor,\n                }}\n              >\n                <div className=\"chrono-icons\">\n                  {data.experience.map((experience) =>\n                    experience.icon ? (\n                      <img\n                        key={experience.icon.src}\n                        src={experience.icon.src}\n                        alt={experience.icon.alt}\n                      />\n                    ) : null\n                  )}\n                </div>\n              </Chrono>\n            </Container>\n          </div>\n        </Fade>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </>\n  );\n}\n\nExperience.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../App.css\";\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n"],"names":["props","theme","useContext","ThemeContext","header","data","setData","useState","width","setWidth","mode","setMode","useEffect","_window","_window2","_window3","_window4","_window5","_window6","fetch","endpoints","experience","method","then","res","json","catch","err","window","innerWidth","_jsxs","_Fragment","children","_jsx","Header","title","Fade","style","className","Container","Chrono","hideControls","allowDynamicUpdate","useReadMore","items","primary","accentColor","secondary","background","cardBgColor","chronoTheme","cardForeColor","titleColorActive","titleColor","map","icon","src","alt","FallbackSpinner"],"sourceRoot":""}