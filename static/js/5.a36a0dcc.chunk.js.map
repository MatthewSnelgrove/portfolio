{"version":3,"sources":["components/Header.jsx","components/Experience.jsx"],"names":["Header","props","title","_jsx","className","children","Experience","theme","useContext","ThemeContext","header","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","width","setWidth","_useState5","_useState6","mode","setMode","useEffect","_window","_window2","_window3","_window4","_window5","_window6","fetch","endpoints","experience","method","then","res","json","catch","err","window","innerWidth","_jsxs","_Fragment","Fade","style","Container","Chrono","hideControls","allowDynamicUpdate","useReadMore","items","primary","accentColor","secondary","color","cardBgColor","chronoTheme","cardForeColor","titleColorActive","background","map","icon","src","alt","FallbackSpinner"],"mappings":"6IAAA,6BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAOC,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,8ICkFeI,UA7Ef,SAAoBL,GAClB,IAAMM,EAAQC,qBAAWC,KACjBC,EAAWT,EAAXS,OACRC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAA0BL,mBAAS,QAAOM,EAAAJ,YAAAG,EAAA,GAAnCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAwBT,mBAAS,wBAAuBU,EAAAR,YAAAO,EAAA,GAAjDE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAyBpB,OAvBAG,qBAAU,WAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACdC,MAAMC,IAAUC,WAAY,CAC1BC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKrB,EAAQqB,EAAI,IAC1BE,OAAM,SAACC,GAAG,OAAKA,CAAG,KAEX,QAANd,EAAAe,cAAM,IAAAf,OAAA,EAANA,EAAQgB,YAAa,KACvBlB,EAAQ,aAGA,QAANG,EAAAc,cAAM,IAAAd,OAAA,EAANA,EAAQe,YAAa,IACvBtB,EAAS,SACM,QAANQ,EAAAa,cAAM,IAAAb,OAAA,EAANA,EAAQc,aAAc,MAAa,QAANb,EAAAY,cAAM,IAAAZ,OAAA,EAANA,EAAQa,YAAa,IAC3DtB,EAAS,SACM,QAANU,EAAAW,cAAM,IAAAX,OAAA,EAANA,EAAQY,aAAc,MAAa,QAANX,EAAAU,cAAM,IAAAV,OAAA,EAANA,EAAQW,YAAa,KAC3DtB,EAAS,QAETA,EAAS,OAEb,GAAG,IAGDuB,eAAAC,WAAA,CAAAvC,SAAA,CACEF,cAACH,UAAM,CAACE,MAAOQ,IACdK,EACCZ,cAAC0C,IAAI,CAAAxC,SACHF,cAAA,OAAK2C,MAAO,CAAE3B,SAASf,UAAU,4BAA2BC,SAC1DF,cAAC4C,IAAS,CAAA1C,SACRF,cAAC6C,IAAM,CACLC,cAAY,EACZC,oBAAkB,EAClBC,aAAa,EACbC,MAAOrC,EAAKmB,WACZX,KAAMA,EACNhB,MAAO,CACL8C,QAAS9C,EAAM+C,YACfC,UAAWhD,EAAMiD,MACjBC,YAAalD,EAAMmD,YAAYD,YAC/BE,cAAepD,EAAMmD,YAAYC,cACjCC,iBAAkBrD,EAAMsD,YACxBxD,SAEFF,cAAA,OAAKC,UAAU,eAAcC,SAC1BU,EAAKmB,WAAW4B,KAAI,SAAC5B,GAAU,OAC9BA,EAAW6B,KACT5D,cAAA,OAEE6D,IAAK9B,EAAW6B,KAAKC,IACrBC,IAAK/B,EAAW6B,KAAKE,KAFhB/B,EAAW6B,KAAKC,KAIrB,IAAI,cAQpB7D,cAAC+D,UAAe,MAIxB,C","file":"static/js/5.a36a0dcc.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../App.css\";\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Chrono } from \"react-chrono\";\nimport { Container } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport Fade from \"react-reveal\";\nimport { ThemeContext } from \"styled-components\";\nimport endpoints from \"../constants/endpoints\";\nimport Header from \"./Header\";\nimport FallbackSpinner from \"./FallbackSpinner\";\nimport \"../css/experience.css\";\n\nfunction Experience(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [width, setWidth] = useState(\"50vw\");\n  const [mode, setMode] = useState(\"VERTICAL_ALTERNATING\");\n\n  useEffect(() => {\n    fetch(endpoints.experience, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n\n    if (window?.innerWidth < 576) {\n      setMode(\"VERTICAL\");\n    }\n\n    if (window?.innerWidth < 576) {\n      setWidth(\"90vw\");\n    } else if (window?.innerWidth >= 576 && window?.innerWidth < 768) {\n      setWidth(\"85vw\");\n    } else if (window?.innerWidth >= 768 && window?.innerWidth < 1024) {\n      setWidth(\"80vw\");\n    } else {\n      setWidth(\"75vw\");\n    }\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <Fade>\n          <div style={{ width }} className=\"section-content-container\">\n            <Container>\n              <Chrono\n                hideControls\n                allowDynamicUpdate\n                useReadMore={false}\n                items={data.experience}\n                mode={mode}\n                theme={{\n                  primary: theme.accentColor,\n                  secondary: theme.color,\n                  cardBgColor: theme.chronoTheme.cardBgColor,\n                  cardForeColor: theme.chronoTheme.cardForeColor,\n                  titleColorActive: theme.background,\n                }}\n              >\n                <div className=\"chrono-icons\">\n                  {data.experience.map((experience) =>\n                    experience.icon ? (\n                      <img\n                        key={experience.icon.src}\n                        src={experience.icon.src}\n                        alt={experience.icon.alt}\n                      />\n                    ) : null\n                  )}\n                </div>\n              </Chrono>\n            </Container>\n          </div>\n        </Fade>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </>\n  );\n}\n\nExperience.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n"],"sourceRoot":""}