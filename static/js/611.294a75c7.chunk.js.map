{"version":3,"file":"static/js/611.294a75c7.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\nexports.typeOf=y;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n */\n\n/**\n * @typedef {Array<Node> | string} ChildrenOrValue\n *   List to use as `children` or value to use as `value`.\n *\n * @typedef {Record<string, unknown>} Props\n *   Other fields to add to the node.\n */\n\n/**\n * Build a node.\n *\n * @param type\n *   Node type.\n * @param props\n *   Fields assigned to node.\n * @param value\n *   Children of node or value of `node` (cast to string).\n * @returns\n *   Built node.\n */\nexport const u =\n  /**\n   * @type {(\n   *   (<T extends string>(type: T) => {type: T}) &\n   *   (<T extends string, P extends Props>(type: T, props: P) => {type: T} & P) &\n   *   (<T extends string>(type: T, value: string) => {type: T, value: string}) &\n   *   (<T extends string, P extends Props>(type: T, props: P, value: string) => {type: T, value: string} & P) &\n   *   (<T extends string, C extends Array<Node>>(type: T, children: C) => {type: T, children: C}) &\n   *   (<T extends string, P extends Props, C extends Array<Node>>(type: T, props: P, children: C) => {type: T, children: C} & P)\n   * )}\n   */\n  (\n    /**\n     * @param {string} type\n     * @param {Props | ChildrenOrValue | null | undefined} [props]\n     * @param {ChildrenOrValue | null | undefined} [value]\n     * @returns {Node}\n     */\n    function (type, props, value) {\n      /** @type {Node} */\n      const node = {type: String(type)}\n\n      if (\n        (value === undefined || value === null) &&\n        (typeof props === 'string' || Array.isArray(props))\n      ) {\n        value = props\n      } else {\n        Object.assign(node, props)\n      }\n\n      if (Array.isArray(value)) {\n        // @ts-expect-error: create a parent.\n        node.children = value\n      } else if (value !== undefined && value !== null) {\n        // @ts-expect-error: create a literal.\n        node.value = String(value)\n      }\n\n      return node\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder\n  const identifier = String(node.identifier)\n  const index = footnoteOrder.indexOf(identifier)\n  const marker = String(\n    index === -1 ? footnoteOrder.push(identifier) : index + 1\n  )\n\n  return h(\n    node,\n    'a',\n    {\n      href: '#fn' + marker,\n      className: ['footnote-ref'],\n      id: 'fnref' + marker,\n      role: 'doc-noteref'\n    },\n    [h(node.position, 'sup', [u('text', marker)])]\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array.<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    let pos = node.align ? align.length : row.length\n    /** @type {Array.<Content>} */\n    const out = []\n\n    while (pos--) {\n      const cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array.<string>} */\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    // TODO: deprecate `plugins` in v8.0.0.\n    .use(options.remarkPlugins || options.plugins || [])\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","b","d","e","f","g","h","k","n","p","q","r","u","v","w","Symbol","for","x","y","a","t","$$typeof","z","A","B","C","D","E","F","G","H","I","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","parse","require","iterator","output","hasIterator","len","stringifyPosition","point","index","VFileMessage","place","origin","parts","super","undefined","indexOf","message","stack","fatal","ruleId","file","actual","expected","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","_len","segments","_key","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","bufferLike","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","fn","_len2","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","done","apply","Promise","then","_len4","_key4","wrap","use","middelware","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","document","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","extensions","combineExtensions","defaultConstructs","concat","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","props","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","loose","properties","className","footnoteReference","footnoteOrder","id","role","revert","subtype","suffix","contents","listItemLoose","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","disabled","child","root","table","rows","align","row","out","cell","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","definitions","hName","hProperties","hChildren","ctx","generated","toHast","foot","listItems","backReference","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","PropTypes"],"sourceRoot":""}